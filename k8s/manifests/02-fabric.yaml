---
apiVersion: v1
kind: Service
metadata:
  name: ca-org1
  namespace: mediblock
spec:
  selector:
    app: ca-org1
  ports:
  - name: ca-port
    port: 7054
    targetPort: 7054
  - name: operations
    port: 17054
    targetPort: 17054
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-org1
  namespace: mediblock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-org1
  template:
    metadata:
      labels:
        app: ca-org1
    spec:
      containers:
      - name: ca-org1
        image: hyperledger/fabric-ca:latest
        env:
        - name: FABRIC_CA_HOME
          value: /etc/hyperledger/fabric-ca-server
        - name: FABRIC_CA_SERVER_CA_NAME
          value: ca.org1.example.com
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_PORT
          value: "7054"
        - name: FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS
          value: 0.0.0.0:17054
        ports:
        - containerPort: 7054
        - containerPort: 17054
        command: ["sh", "-c", "fabric-ca-server start -b admin:adminpw -d"]
        volumeMounts:
        - name: ca-config
          mountPath: /etc/hyperledger/fabric-ca-server
      volumes:
      - name: ca-config
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: orderer
  namespace: mediblock
spec:
  selector:
    app: orderer
  ports:
  - name: orderer-port
    port: 7050
    targetPort: 7050
  - name: operations
    port: 17050
    targetPort: 17050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderer
  namespace: mediblock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orderer
  template:
    metadata:
      labels:
        app: orderer
    spec:
      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:2.5
        env:
        - name: FABRIC_LOGGING_SPEC
          value: DEBUG
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "7050"
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /var/hyperledger/orderer/genesis.block
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /tmp/msp
        - name: ORDERER_OPERATIONS_LISTENADDRESS
          value: 0.0.0.0:17050
        - name: ORDERER_GENERAL_BOOTSTRAPMETHOD
          value: none
        - name: ORDERER_GENERAL_PROFILE_ENABLED
          value: "false"
        - name: ORDERER_CHANNELPARTICIPATION_ENABLED
          value: "true"
        - name: ORDERER_ADMIN_LISTENADDRESS
          value: 0.0.0.0:7052
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "false"
        - name: ORDERER_GENERAL_AUTHENTICATION_NOEXPIRATIONCHECKS
          value: "true"
        ports:
        - containerPort: 7050
        - containerPort: 17050
        - containerPort: 7052
        command: ["sh", "-c", "apt-get update && apt-get install -y openssl && mkdir -p /var/hyperledger/production/orderer && mkdir -p /tmp/msp/admincerts && mkdir -p /tmp/msp/cacerts && mkdir -p /tmp/msp/config && mkdir -p /tmp/msp/keystore && mkdir -p /tmp/msp/signcerts && mkdir -p /tmp/msp/tlscacerts && echo 'NodeOUs:\n  Enable: false\n  ClientOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: peer\n  AdminOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: admin\n  OrdererOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: orderer' > /tmp/msp/config.yaml && openssl genrsa -out /tmp/msp/keystore/key.pem 2048 && openssl req -new -key /tmp/msp/keystore/key.pem -out /tmp/msp/keystore/csr.pem -subj '/CN=orderer/O=Hyperledger/OU=Fabric/' && openssl x509 -req -in /tmp/msp/keystore/csr.pem -signkey /tmp/msp/keystore/key.pem -out /tmp/msp/signcerts/cert.pem -days 365 && cp /tmp/msp/signcerts/cert.pem /tmp/msp/cacerts/ca.crt && cp /tmp/msp/signcerts/cert.pem /tmp/msp/admincerts/admincert.pem && sleep 5 && orderer"]
        volumeMounts:
        - name: orderer-data
          mountPath: /var/hyperledger/production/orderer
        - name: orderer-msp-dir
          mountPath: /var/hyperledger/orderer/msp
        - name: temp-msp
          mountPath: /tmp/msp
        - name: genesis-block
          mountPath: /var/hyperledger/orderer/genesis.block
          subPath: genesis.block
      volumes:
      - name: orderer-data
        emptyDir: {}
      - name: orderer-msp-dir
        secret:
          secretName: orderer-msp-secret
          items:
          - key: ca.crt
            path: cacerts/ca.crt
          - key: cert.pem
            path: signcerts/cert.pem
          - key: key.pem
            path: keystore/key.pem
          - key: admincert.pem
            path: admincerts/admincert.pem
      - name: temp-msp
        emptyDir: {}
      - name: genesis-block
        configMap:
          name: fabric-config
---
apiVersion: v1
kind: Service
metadata:
  name: peer0-org1
  namespace: mediblock
spec:
  selector:
    app: peer0-org1
  ports:
  - name: peer-port
    port: 7051
    targetPort: 7051
  - name: operations
    port: 17051
    targetPort: 17051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer0-org1
  namespace: mediblock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peer0-org1
  template:
    metadata:
      labels:
        app: peer0-org1
    spec:
      containers:
      - name: peer0-org1
        image: hyperledger/fabric-peer:2.5
        env:
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
          value: mediblock_mediblock-network
        - name: FABRIC_LOGGING_SPEC
          value: DEBUG
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_ADDRESS
          value: peer0-org1:7051
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer0-org1:7051
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_PEER_ID
          value: peer0.org1.example.com
        - name: CORE_OPERATIONS_LISTENADDRESS
          value: 0.0.0.0:17051
        - name: CORE_PEER_MSPCONFIGPATH
          value: /tmp/msp
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_AUTHENTICATION_NOEXPIRATIONCHECKS
          value: "true"
        ports:
        - containerPort: 7051
        - containerPort: 17051
        securityContext:
          privileged: true
        command: ["sh", "-c", "apt-get update && apt-get install -y openssl && mkdir -p /var/hyperledger/production && mkdir -p /tmp/msp/admincerts && mkdir -p /tmp/msp/cacerts && mkdir -p /tmp/msp/config && mkdir -p /tmp/msp/keystore && mkdir -p /tmp/msp/signcerts && mkdir -p /tmp/msp/tlscacerts && echo 'NodeOUs:\n  Enable: false\n  ClientOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: client\n  PeerOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: peer\n  AdminOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: admin\n  OrdererOUIdentifier:\n    Certificate: cacerts/ca.crt\n    OrganizationalUnitIdentifier: orderer' > /tmp/msp/config.yaml && openssl genrsa -out /tmp/msp/keystore/key.pem 2048 && openssl req -new -key /tmp/msp/keystore/key.pem -out /tmp/msp/keystore/csr.pem -subj '/CN=peer/O=Hyperledger/OU=Fabric/' && openssl x509 -req -in /tmp/msp/keystore/csr.pem -signkey /tmp/msp/keystore/key.pem -out /tmp/msp/signcerts/peer.crt -days 365 && cp /tmp/msp/signcerts/peer.crt /tmp/msp/cacerts/ca.crt && cp /tmp/msp/signcerts/peer.crt /tmp/msp/admincerts/admincert.pem && export CORE_PEER_MSPCONFIGPATH=/tmp/msp && sleep 5 && peer node start"]
        volumeMounts:
        - name: peer-data
          mountPath: /var/hyperledger/production
        - name: docker-socket
          mountPath: /host/var/run/docker.sock
        - name: peer-msp-dir
          mountPath: /etc/hyperledger/fabric/msp
        - name: temp-msp
          mountPath: /tmp/msp
      volumes:
      - name: peer-data
        emptyDir: {}
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: peer-msp-dir
        secret:
          secretName: peer0-org1-msp-secret
          items:
          - key: ca.crt
            path: cacerts/ca.crt
          - key: peer.crt
            path: signcerts/peer.crt
          - key: peer.key
            path: keystore/peer.key
          - key: admincert.pem
            path: admincerts/admincert.pem
      - name: temp-msp
        emptyDir: {} 